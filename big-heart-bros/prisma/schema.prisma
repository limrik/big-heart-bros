generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String                @id @default(uuid())
  name              String
  email             String                @unique
  phoneNumber       String
  gender            GenderType
  occupation        String
  dob               DateTime
  canDrive          Boolean
  ownVehicle        Boolean
  commitmentLevel   CommitmentLevelType
  skills            Skills[]
  interests         Interests[]           @default([])
  feedback          Feedback[]
  residentialStatus ResidentialStatusType
  events            UsersInEvents[]
  totalHours        Int                   @default(0)
}

model UsersInEvents {
  user     User    @relation(fields: [userId], references: [id])
  userId   String
  event    Event   @relation(fields: [eventId], references: [id])
  eventId  String
  attended Boolean

  @@id([userId, eventId])
}

model Feedback {
  id             String       @id @default(uuid())
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  organisation   Organisation @relation(fields: [organisationId], references: [id])
  organisationId String
  event          Event        @relation(fields: [eventId], references: [id])
  eventId        String
  message        String
  createdAt      DateTime     @default(now())
}

model Organisation {
  id            String     @id @default(uuid())
  name          String
  email         String     @unique
  description   String     @default("")
  phoneNumber   String
  events        Event[]
  feedbackGiven Feedback[]
}

model Event {
  id                   String          @id @default(uuid())
  name                 String
  description          String
  capacity             Int
  location             String
  type                 EventType
  registrationDeadline DateTime
  startDate            DateTime
  endDate              DateTime
  startTime            DateTime
  endTime              DateTime
  skills               Skills[]
  interests            Interests[]     @default([])
  createdAt            DateTime        @default(now())
  poster               Organisation    @relation(fields: [posterId], references: [id])
  posterId             String
  users                UsersInEvents[]
  feedbackGiven        Feedback[]
  status               EventStatus     @default(Pending)
}

enum GenderType {
  Male
  Female
}

enum ResidentialStatusType {
  SingaporeCitizen
  SingaporePR
  DP
  EP
  LTVP
  SP
  VV
}

enum CommitmentLevelType {
  AdHoc
  Low
  Medium
  High
}

enum Skills {
  OnGroundVolunteering
  Photography
  Videography
  ArtsAndCraft
  PerformingSkills
  Sports
  Teaching
  Leadership
  DigitalMarketing
}

enum EventType {
  Volunteering
  Training
  Workshop
}

enum EventStatus {
  Pending
  Approved
  Completed
}

enum Interests {
  CommunityService
  EnvironmentalProtection
  HealthcareSupport
  EducationSupport
  YouthMentoring
  ElderlySupport
  ArtsAndCulture
  SportsAndRecreation
  TechnologyAssistance
  FundraisingEvents
  FoodBankAssistance
  HomelessnessSupport
}
